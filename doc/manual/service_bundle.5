.Dd February 12, 2021
.Dt SERVICE_BUNDLE 5
.Os eComInit

.Sh NAME
.Nm service_bundle
.Nd service manifest file format

.Sh DESCRIPTION
The service manager (see
.Xr eComInit 7 )
may import service descriptions or export them (with the help of
.Xr importsys 8
and
.Xr exportsys 8
respectively) to a
.Em UCL Ns No -based
format. A file containing a service description is known as a
.Em service manifest Ns .

The service bundle format is defined by the JSON-Schema (v4) found in
.Pa /lib/sys/serviceBundleSchema.json Ns .
This document summarises the format.

.Sh BUNDLE STRUCTURE
A well-formed service bundle shall consist of a dictionary with keys:
.Bl -tag
.It \(dqname\(dq
a
.Sx CLASS NAME

.It \(dqdepends\(dq (optional)
.Sx DEPENDENCIES

.It \(dqdependents\(dq (optional)
.Sx DEPENDENTS

.It \(dqinstances\(dq (optional)
.Sx INSTANCES ,
a dictionary of instance names to instance dictionaries, the instance
dictionaries being well-formed if they contain:

.Bl -tag
.It \(dqdepends\(dq (optional)
.Sx DEPENDENCIES
.It \(dqdependents\(dq (optional)
.Sx DEPENDENTS
.It \(dqmethods\(dq (optional)
.Sx METHODS
.It all other keys (optional)
.Sx PROPERTIES Ns
.El

.It \(dqmethods\(dq (optional)
.Sx METHODS

.It all other keys (optional)
.Sx PROPERTIES
.El

.Ss CLASS NAME
A string denoting the name of a class.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
name runlevel$single-user;
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "name": "runlevel$single-user"
.Ed
.Bd -literal -offset -indent
.Ed

.Ss DEPENDENCIES
A dictionary containing pairs of keys denoting
.Em dependency type
(see
.Xr eComInit 7 Ns ,
ss.
.Sy DEPENDENCIES Ns No ,
for details) to arrays of
.Em instance names Ns No ,
denoting instances on which this instance will depend in some way.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
depends requires [ runlevel$single-user, file$/etc/passwd ]
depends after [ runlevel$single-user ]
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "depends": {
        "after": [
            "runlevel$root-filesystem",
            "hostname",
            "utmpx"
        ]
    },
.Ed

.Ss DEPENDENTS
A dictionary containing pairs of keys denoting
.Em dependency type
(see
.Xr eComInit 7 Ns ,
ss.
.Sy DEPENDENCIES Ns No ,
for details) to arrays of
.Em instance names Ns No ,
denoting instances which will
.Em depend on this instance
in some way.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
dependents requires [ runlevel$multi-user ]
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "dependents": {
        "requires": [
            "runlevel$multi-user",
        ]
    },
.Ed

.Ss INSTANCES
A dictionary containing keys of instance names (see
.Xr eComInit 8 Ns No ,
ss.
.Sy NAMING Ns No ,
for further details) to values of dictionaries describing an instance. These
dictionaries may contain an optional
.Sx DEPENDS
member and optional
.Sx PROPERTIES
members.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
instances {
    /dev/console {
        depends requires [ file$%i ];
        methods execStart {
            command "/sbin/getty /dev/console linux";
        };
    };
    /dev/tty1 {};
};
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "instances": {
        "/dev/console": {
            "depends": {
                "requires": [
                    "file$%i"
                ]
            },
            methods {
                "execStart": {
                    "command": "/sbin/getty /dev/console linux"
                }
            }
        },
        "/dev/tty1": { }
    }
.Ed

.Ss METHODS
A dictionary containing keys of method names to values of dictionaries
describing the method. See
.Xr sys_method 7
for further details on methods. The dictionary member is a
.Em property page
and thus admits
.Sx PROPERTIES
members.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
methods execStart {
    command "/bin/sleep 500";
};
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "methods": {
        "execStart": {
            "command": "/bin/sleep 500"
        },
    }
.Ed

.Ss PROPERTIES
All dictionary pairs in a Class or Instance not either a
.Sx DEPENDS Ns No ,
a
.Sx DEPENDENTS Ns No ,
a
.Sx METHODS Ns No ,
or in the case of a Class, an
.Sx INSTANCES
member, shall be interpreted as a
.Em property Ns No .

The property is named by the key, and its value may be either a string,
denoting a
.Em string property ,
or it may be a dictionary, denoting a
.Em property page .
A property page's member dictionary pages are interpreted as
.Sx PROPERTIES
in their own right, and may be nested.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
someStringProp someValue;
page {
    aStringProp someThing;
    nestedPage {
        aProp aValue;
        anotherProp anotherValue;
    };
};
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "someStringProp": "someValue",
    "page": {
        "aStringProp": "someThing",
        "nestedPage": {
            "aProp": "aValue",
            "anotherProp": "anotherValue"
        }
    }
.Ed

.Sh EXAMPLES
.Bd -literal -offset indent
name getty;
depends after [ runlevel$root-filesystem, hostname, utmpx ];
requires [ file:%i ];
instances {
    /dev/console {};
    /dev/tty1 {};
};
methods execStart {
    command "/sbin/getty %i xterm";
};
.Ed