.Dd February 12, 2021
.Dt SERVICE_BUNDLE 5
.Os eComInit

.Sh NAME
.Nm service_bundle
.Nd service manifest file format

.Sh DESCRIPTION
The service manager (see
.Xr eComInit 7 )
may import service descriptions or export them (with the help of
.Xr importsys 8
and
.Xr exportsys 8
respectively) to a
.Em UCL
format. UCL is a superset of
.Em JSON Ns ,
replicating its object model, and indeed if preferred one may write service
descriptions in straight JSON. A file containing a service description is known
as a
.Em service manifest Ns .

The service bundle format is defined by the JSON-Schema (v4) found in
.Pa /lib/sys/serviceBundleSchema.json Ns .
Being a
.Em UCL
format, all the UCL bonus features such as
.Em includes
are supported. (It must be clearly understood that these features are of purely
lexicographic significance, and are no longer reified beyond the point of
parsing.)

.Sh BUNDLE STRUCTURE
A well-formed service bundle shall consist of a dictionary with keys:
.Bl -tag
.It \(dqname\(dq
a
.Sx CLASS NAME

.It \(dqdepends\(dq (optional)
.Sx DEPENDENCIES

.It \(dqinstances\(dq (optional)
.Sx INSTANCES ,
a dictionary of instance names to instance dictionaries, the instance
dictionaries being well-formed if they contain:

.Bl -tag
.It \(dqdepends\(dq (optional)
.Sx DEPENDENCIES
.It all other keys (optional)
.Sx PROPERTIES Ns
.El

.It all other keys (optional)
.Sx PROPERTIES
.El

.Ss CLASS NAME
A string denoting the name of a class.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
name runlevel$single-user;
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "name": "runlevel$single-user"
.Ed
.Bd -literal -offset -indent
.Ed

.Ss DEPENDENCIES
A dictionary containing pairs of keys denoting
.Em dependency type
(see
.Xr eComInit 7 Ns ,
subsection
.Sy DEPENDENCIES Ns No ,
for details) to arrays of
.Em instance names Ns No .

.Pp
Example (UCL style):
.Bd -literal -offset -indent
depends requires [ runlevel$single-user, file$/etc/passwd ]
depends after [ runlevel$single-user ]
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "depends": {
        "after": [
            "runlevel$root-filesystem",
            "hostname",
            "utmpx"
        ]
    },
.Ed

.Ss INSTANCES
A dictionary containing keys of instance names (see
.Xr eComInit 8 Ns No ,
subsection
.Sy Naming Ns No ,
for further details) to values of dictionaries describing an instance. These
dictionaries may contain an optional
.Sx DEPENDS
member and optional
.Sx PROPERTIES
members.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
depends requires [ runlevel$single-user, file$/etc/passwd ]
depends after [ runlevel$single-user ]
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "depends": {
        "after": [
            "runlevel$root-filesystem",
            "hostname",
            "utmpx"
        ]
    },
.Ed

.Ss PROPERTIES
All dictionary pairs in a Class or Instance not either a
.Sx DEPENDS Ns No ,
or in the case of a Class, an
.Sx INSTANCES
member, shall be interpreted as a
.Em property Ns No .

The property is named by the key, and its value may be either a string,
denoting a
.Em string property ,
or it may be a dictionary, denoting a
.Em property page .
A property page's member dictionary pages are interpreted as
.Sx PROPERTIES
in their own right, and may be nested.

.Pp
Example (UCL style):
.Bd -literal -offset -indent
someStringProp someValue;
page {
    aStringProp someThing;
    nestedPage {
        aProp aValue;
        anotherProp anotherValue;
    };
};
.Ed

.Pp
Example (JSON style):
.Bd -literal -offset -indent
    "someStringProp": "someValue",
    "page": {
        "aStringProp": "someThing",
        "nestedPage": {
            "aProp": "aValue",
            "anotherProp": "anotherValue"
        }
    }
.Ed

.Sh EXAMPLES
.Bd -literal -offset indent
name getty;
depends after [ runlevel$root-filesystem, hostname, utmpx ];
requires [ file:%i ]
instances {
    "/dev/console" {};
    "/dev/tty1" {};
};
execStart {
    command "/sbin/getty %i xterm";
};
.Ed